apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: visibility
spec:
  replicas: 1 # {"$ref":"#/definitions/io.k8s.cli.setters.prometheus.replicas"}
  enableAdminAPI: true # {"$ref":"#/definitions/io.k8s.cli.setters.prometheus.enable-admin-api"}
  externalUrl: "https://prometheus-visibility.kube-visibility.svc:9090/" # {"$ref":"#/definitions/io.k8s.cli.setters.prometheus.external-url"}
  retention: 3w # {"$ref":"#/definitions/io.k8s.cli.setters.prometheus.retention"}
  retentionSize: 10GB # {"$ref":"#/definitions/io.k8s.cli.setters.prometheus.retention-size"}
  logLevel: info # {"$ref":"#/definitions/io.k8s.cli.setters.prometheus.log-level"}
  logFormat: logfmt # {"$ref":"#/definitions/io.k8s.cli.setters.prometheus.log-format"}
  alerting:
    alertmanagers:
      - name: alertmanager-visibility
        namespace: kube-visibility # {"$ref":"#/definitions/io.k8s.cli.setters.namespace"}
        port: web
  resources:
    limits:
      cpu: 200m # {"$ref":"#/definitions/io.k8s.cli.setters.prometheus.resources-limits-cpu"}
      memory: 500Mi # {"$ref":"#/definitions/io.k8s.cli.setters.prometheus.resources-limits-memory"}
    requests:
      cpu: 100m # {"$ref":"#/definitions/io.k8s.cli.setters.prometheus.resources-requests-cpu"}
      memory: 300Mi # {"$ref":"#/definitions/io.k8s.cli.setters.prometheus.resources-requests-memory"}
  ruleSelector:
    matchLabels:
      prometheus: visibility
    matchExpressions:
      - { key: role, operator: In, values: [alert-rules, record-rules] }
  serviceMonitorNamespaceSelector: {}
  # This allow that any kind: ServiceMonitor that have the label 'prometheus-visibility.monitoring: "enabled"' will be scraped
  serviceMonitorSelector:
    matchLabels:
      prometheus-visibility.monitoring: "enabled"
  podMonitorNamespaceSelector: {}
  # This allow that any kind: PodMonitor that have the label 'prometheus-visibility.monitoring: "enabled"' will be scraped
  podMonitorSelector:
    matchLabels:
      prometheus-visibility.monitoring: "enabled"